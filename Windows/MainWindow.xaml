<Window
    x:Class="KeyAuth_WPF.Windows.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:KeyAuth_WPF"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ViewModel="clr-namespace:KeyAuth_WPF.ViewModels"
    x:Name="window"
    Title="KeyAuth_WPF"
    Width="730"
    Height="435"
    Closing="Window_Closing"
    Loaded="MainWindow_OnLoaded"
    ResizeMode="NoResize"
    Style="{StaticResource LightUIWindow}"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.DataContext>
        <ViewModel:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <BeginStoryboard x:Key="CloseAnim">
            <Storyboard Completed="FinishedClosingAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="window" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="20">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </BeginStoryboard>
        <Storyboard x:Key="OpenAnim">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="window" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="20">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard Storyboard="{StaticResource OpenAnim}" />
        </EventTrigger>
    </Window.Triggers>
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="32"
            CornerRadius="0,0,0,0"
            GlassFrameThickness="0"
            ResizeBorderThickness="7"
            UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>
    <Border Name="Border" Style="{StaticResource WindowBorder}">
        <Grid>
            <Grid x:Name="nav_pal" Height="400" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="150" Background="#202020">
                <RadioButton x:Name="RadioButton1"
                             VerticalAlignment="Top"
                             Content="Home" 
                             Height="50" 
                             Foreground="White"
                             FontSize="14" 
                             Style="{StaticResource MenuButtonTheme}" IsChecked="True" 
                             Command="{Binding HomeViewCommand}"
                             MouseEnter="RadioButton1_OnMouseEnter"
                             MouseLeave="RadioButton1_OnMouseLeave"
                             Cursor="Hand"/>

                <RadioButton x:Name="RadioButton"
                             VerticalAlignment="Top"
                             Content="Subscriptions" 
                             Height="50" 
                             Foreground="White" 
                             Background="Transparent"
                             FontSize="14" 
                             Margin="0, 50"
                             Style="{StaticResource MenuButtonTheme}"
                             Command="{Binding SubscriptionsViewCommand}"
                             MouseEnter="RadioButton_OnMouseEnter"
                             MouseLeave="RadioButton_OnMouseLeave"
                             Cursor="Hand">
                </RadioButton>
                <TextBlock Name="TextBlockWelcome" Margin="0, 20" Text="Welcome, " HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
            </Grid>
            <Grid x:Name="content" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="580" Height="390">
                <ContentControl Margin="10" Content="{Binding CurrentView }"/>
            </Grid>
            <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Grid.RenderTransform>
                <Grid.RowDefinitions>
                    <RowDefinition Height="32" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Name="TopBar" Height="32" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="#303030">
                    <StackPanel Width="95"  Height="32" Margin="633,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Orientation="Horizontal">
                        <TextBlock Name="hackerman" Text="Hacker man" Margin="-630,0,0,0" FontSize="16" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <Button Name="minimizebutton" Width="47" Background="{x:Null}" BorderBrush="{x:Null}" Click="CaptionButtons_Click" Cursor="Arrow" Foreground="White" ToolTip="Minimize" WindowChrome.IsHitTestVisibleInChrome="True">
                            <materialDesign:PackIcon Name="minimizeicon" Foreground="{DynamicResource MaterialDesignBody}" Kind="WindowMinimize" />
                        </Button>
                        <Button Name="closebtn" Width="47" materialDesign:RippleAssist.Feedback="#DDC80000" Background="{x:Null}" BorderBrush="{x:Null}" Click="CaptionButtons_Click" Cursor="Arrow" Foreground="White" ToolTip="Close" WindowChrome.IsHitTestVisibleInChrome="True">
                            <materialDesign:PackIcon Name="closeicon" Foreground="{DynamicResource MaterialDesignBody}" Kind="WindowClose" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Frame Name="MainFrame"/>
                <materialDesign:Snackbar x:Name="MainSnackbar" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" MessageQueue="{materialDesign:MessageQueue}" />
            </Grid>
        </Grid>
    </Border>
</Window>
